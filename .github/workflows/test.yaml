name: test

on:
  workflow_dispatch:
  push:
    branches: [ '*' ]

jobs:
  kubernetes:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup tools
      uses: ./.github/actions/tools
    - name: Setup Flux
      uses: fluxcd/flux2/action@main
    - name: Setup Kubernetes
      uses: engineerd/setup-kind@v0.5.0
      with:
        version: "v0.11.1"
    - name: Install Flux in Kubernetes Kind
      run: flux install --log-level debug

    - name: Setup cluster reconciliation
      run: |
        kubectl apply -f - <<EOF > cat
        apiVersion: source.toolkit.fluxcd.io/v1beta2
        kind: GitRepository
        metadata:
          name: sample-stamp
          namespace: flux-system
        spec:
          interval: 15m
          ref:
            branch: ${GITHUB_REF#refs/heads/}
          url: ${{ github.event.repository.html_url }}
          # ignore: |
          #   /clusters/sample-stamp/tenants.yaml
        EOF

        kubectl -n flux-system wait gitrepository/sample-stamp --for=condition=ready --timeout=1m

        flux get sources git -A

        flux create kustomization sample-stamp \
        --interval=15m \
        --source=sample-stamp \
        --path=./clusters/sample-stamp

    - name: Verify reconciliation kustomizations/operations-releases
      run: |
        kubectl -n flux-system wait kustomization/operations-releases --for=condition=ready --timeout=15m
        flux get kustomizations -A
        

    - name: Verify reconciliation kustomization/operations-manifests
      run: |
        kubectl -n flux-system wait kustomization/operations-manifests --for=condition=ready --timeout=15m
        flux get kustomizations -A
        

    - name: Verify reconciliation kustomization/tenants
      run: |
        kubectl -n flux-system wait kustomization/tenants --for=condition=ready --timeout=15m
        kubectl -n sample-app wait kustomization/sample-app --for=condition=ready --timeout=15m
        flux get kustomizations -A
        

    - name: List reconciliations
      run: |
        flux get all --all-namespaces

    - name: List Tenant Application Objectxs
      run: |
        kubectl -n sample-app get all

    - name: Debug failure
      if: failure()
      run: |
        flux get sources all --all-namespaces
        flux get ks --all-namespaces
        kubectl -n flux-system get all
        kubectl -n flux-system logs deploy/source-controller
        kubectl -n flux-system logs deploy/kustomize-controller
        kubectl -n flux-system logs deploy/helm-controller
        kubectl -n flux-system logs deploy/notification-controller
        kubectl -n cert-manager get all
        kubectl -n istio-system get all
